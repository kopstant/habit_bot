from celery import shared_task
from django.utils import timezone
import requests
from habit.models import Habit
from users.models import CustomUser
from config import settings
import logging

logger = logging.getLogger(__name__)


@shared_task
def send_telegram_reminder(habit_id, user_id):
    """
    –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–∏–≤—ã—á–∫–µ
    """
    try:
        habit = Habit.objects.get(id=habit_id)
        user = CustomUser.objects.get(id=user_id)

        if not user.telegram_chat_id:
            logger.warning(f'–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.email} –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω Telegram')
            return

        message = (
            f"‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–∏–≤—ã—á–∫–µ!\n"
            f"‚ñ∂ –î–µ–π—Å—Ç–≤–∏–µ: {habit.action}\n"
            f"‚è± –í—Ä–µ–º—è: {habit.time.strftime('%H:%M')}\n"
            f"üìç –ú–µ—Å—Ç–æ: {habit.place}\n"
            f"‚è≥ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {habit.duration} —Å–µ–∫"
        )

        bot_token = settings.TELEGRAM_BOT_TOKEN
        url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
        data = {
            'chat_id': user.telegram_chat_id,
            'text': message,
            'parse_mode': 'Markdown',
        }

        response = requests.post(url, data=data)
        response.raise_for_status()

    except Exception as e:
        logger.error(f'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {str(e)}')


@shared_task
def check_habits_for_reminders():
    now = timezone.now()
    current_time = now.time().replace(second=0, microsecond=0)

    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏ —Å DISTINCT ON
    habits = Habit.objects.filter(time=current_time).select_related('user').order_by('user_id', 'time')

    for habit in habits:
        if not habit.user.telegram_chat_id:
            continue

        last_completed = habit.completions.order_by('-date').first()
        if last_completed:
            days_passed = (now.date() - last_completed.date).days
            if days_passed < habit.periodicity:
                continue

        send_telegram_reminder.delay(habit.id, habit.user.id)
