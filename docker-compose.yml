version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8000"
    environment:
      - NAME=${NAME}
      - USER=${USER}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - PORT=${PORT}
      - LOCATION=${LOCATION}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - db
      - redis
    profiles:
      - dev

  web-test:
    build: .
    command: python manage.py test
    volumes:
      - .:/app
    environment:
      - NAME=${NAME}
      - USER=${USER}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - PORT=${PORT}
      - LOCATION=${LOCATION}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - db
      - redis
    profiles:
      - test

  nginx:
    image: nginx:1.25
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    depends_on:
      - web
    profiles:
      - dev

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${NAME}
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASSWORD}
      - PGPASSWORD=${PASSWORD}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=${PASSWORD} pg_isready -U ${USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2.3
    ports:
      - "6380:6379"

  celery:
    build: .
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - NAME=${NAME}
      - USER=${USER}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - PORT=${PORT}
      - LOCATION=${LOCATION}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - web
      - redis
    profiles:
      - dev

  celery-beat:
    build: .
    command: celery -A config beat -l INFO
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - NAME=${NAME}
      - USER=${USER}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - PORT=${PORT}
      - LOCATION=${LOCATION}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - web
      - redis
    profiles:
      - dev

volumes:
  postgres_data:
  static_volume:
  media_volume: 
    